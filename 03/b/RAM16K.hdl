// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // address[0..2] : どのRAM4Kにアクセスするか
    // address[3..14]: RAM4Kの どのRAM512の どのRAM64の どのRAM8の どのレジスタにアクセスするか

    DMux8Way(in=load,sel=address[0..2],a=ram0,b=ram1,c=ram2,d=ram3,e=ram4,f=ram5,g=ram6,h=ram7);

    RAM4K(in=in,load=ram0,address=address[3..14],out=out0);
    RAM4K(in=in,load=ram1,address=address[3..14],out=out1);
    RAM4K(in=in,load=ram2,address=address[3..14],out=out2);
    RAM4K(in=in,load=ram3,address=address[3..14],out=out3);
    RAM4K(in=in,load=ram4,address=address[3..14],out=out4);
    RAM4K(in=in,load=ram5,address=address[3..14],out=out5);
    RAM4K(in=in,load=ram6,address=address[3..14],out=out6);
    RAM4K(in=in,load=ram7,address=address[3..14],out=out7);

    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[0..2],out=out);
}